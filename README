

   ___________________________
  /    __                     \
  |   /  | /  / / /   /   | / |
  |  /__/ /__/ / /   /    |/  |
  | /    /  / / /__ /__   /   |
  |                           |
  |                    _      |
  |     /| /|   /  /  / \     |
  |    / |/ |  /  /  /   |    |
  |   /     | /__/  /___/     |
  \___________________________/


PROJECT: philly_mud
AUTHOR: Sean T. McBeth (sean.mcbeth@gmail.com)
DATE: 9/20/2011		

DESCRIPTION:
philly_mud is a basic Multi-User Dungeon/Dimension/Domain
written in PLT Racket, a dialect of Scheme. It serves as
a test-bed project for me to learn Scheme in a more directed
and meaningful way. I hate how programming tutorials always
show these ridiculous examples that are completely devoid
of context. It's all "foo" this and "bar" that, disconnecting
concept from context. I believe this to be both unnecessary
and foolish.

GOALS:
1. Learn Scheme
2. Bring the MUD form to a new generation
3. Let other people participate in its creation
4. Make something about the things I love about Philadelphia

LINKS:
You can get the Racket programming language and the DrRacket
editor here:
	http://racket-lang.org/

Its very thorough, if somewhat obtuse, documentation starts here:
	http://docs.racket-lang.org/

If you're new to programming, you probably want to start here:
	http://docs.racket-lang.org/quick/index.html

But otherwise, if you're a long-time programmer who is just new
to Racket, you would probably prefer to start here:
	http://docs.racket-lang.org/guide/index.html

I'm not going to link you to any particular MUDs. The ones 
I used to play are no longer running, and the ones that are
still running are not very accessible. 

However, I would suggest playing the original Zork:
	http://pot.home.xs4all.nl/infocom/zork1.html

Imagine "now add other people" and that should give you an 
idea of how these sorts of games go.

